{"version":3,"sources":["header.js","card.js","top-cards.js","card-small.js","overview.js","swich.js","App.js","serviceWorker.js","index.js"],"names":["Header","children","className","Card","username","followers","todayFollowers","icon","name","cardClass","src","alt","CardListData","id","TopCards","map","cardData","key","CardSmall","pageViews","growths","cardSmallList","growth","Overview","Switch","setDarKMode","checked","setChecked","ref","useRef","onChange","console","log","current","type","htmlFor","App","useState","darkMode","mainClass","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.80d98bf4.chunk.js","sourcesContent":["import React from 'react'\nimport './header.css'\n\n\nfunction Header({ children }){\n    return(\n        <header className=\"header\">\n        <div className=\"wrapper\">\n          <div className=\"header-grid\">\n            <div>\n              <h1>Social Media Dashboard</h1>\n              <p className=\"header-total\">Total Followers: 23, 004</p>\n            </div>\n            {children}\n          </div>\n        </div>\n      </header>\n    );\n}\n\n\nexport default Header;","import React from 'react'\nimport './card.css'\n\n\nfunction Card({username, followers, todayFollowers, icon, name}){\n\n    const cardClass = `card ${name}`\n   \n    return(\n        <article className={cardClass}>\n        <p className=\"card-title\">\n          <img src={icon} alt=\"\"/>\n           {username}\n        </p>\n        <p className=\"card-followers\">\n    <span className=\"card-followers-number\">{followers}</span>\n          <span className=\"card-followers-title\">Followers</span>\n        </p>\n        <p className=\"card-today\">\n          <img src=\"images/icon-up.svg\" alt=\"\"/>\n          {todayFollowers} Today\n        </p>\n      </article>\n    );\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './card'\nimport './top-cards.css'\n\nconst CardListData = [\n  {\n    id:1,\n    username: '@LeonidasEsteban',\n    followers: '1596',\n    todayFollowers: 12,\n    icon:'images/icon-facebook.svg',\n    name : 'facebook'\n  },\n  {\n    id:2,\n    username: '@LeonidasEsteban',\n    followers: '28k',\n    todayFollowers: 30,\n    icon:'images/icon-twitter.svg',\n    name : 'twitter'\n  },\n  {\n    id:3,\n    username: '@LeonidasEsteban',\n    followers: '6k',\n    todayFollowers: 40,\n    icon:'images/icon-instagram.svg',\n    name : 'instagram'\n  },\n  {\n    id:4,\n    username: '@LeonidasEsteban',\n    followers: '12k',\n    todayFollowers: -50,\n    icon:'images/icon-youtube.svg',\n    name : 'youtube'\n  }\n]\n\n\nfunction TopCards(){\n    return(\n<section className=\"top-cards\">\n    <div className=\"wrapper\">\n      <div className=\"grid\">\n      {\n        CardListData.map((cardData) => <Card key={cardData.id} {...cardData}/>)\n      }\n\n    \n\n    {/*\n        <article className=\"card twitter\">\n          <p className=\"card-title\">\n            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\n            @LeonidasEsteban\n          </p>\n          <p className=\"card-followers\">\n            <span className=\"card-followers-number\">28k</span>\n            <span className=\"card-followers-title\">Followers</span>\n          </p>\n          <p className=\"card-today\">\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\n            12 Today\n          </p>\n        </article>\n        <article className=\"card instagram\">\n          <p className=\"card-title\">\n            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\n            @LeonidasEsteban\n          </p>\n          <p className=\"card-followers\">\n            <span className=\"card-followers-number\">6k</span>\n            <span className=\"card-followers-title\">Followers</span>\n          </p>\n          <p className=\"card-today\">\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\n            12 Today\n          </p>\n        </article>\n        <article className=\"card youtube\">\n          <p className=\"card-title\">\n            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\n            @LeonidasEsteban\n          </p>\n          <p className=\"card-followers\">\n            <span className=\"card-followers-number\">12k</span>\n            <span className=\"card-followers-title\">Followers</span>\n          </p>\n          <p className=\"card-today\">\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\n            12 Today\n          </p>\n        </article>\n\n    */}\n      </div>\n    </div>\n  </section>\n\n    );\n\n}\n\nexport default TopCards;","import React from 'react'\nimport './card-small.css'\n\n\nexport default function CardSmall({icon, pageViews, growths}){\n    return(\n        <div className=\"card-small\">\n        <p className=\"card-small-views\">Page Views</p>\n        <p className=\"card-small-icon\">\n          <img src={icon} alt=\"\"/>\n        </p>\n    <p className=\"card-small-number\">{pageViews}</p>\n        <p className=\"card-small-percentage\">\n          <span>\n            <img src=\"images/icon-up.svg\" alt=\"\"/>\n    {growths}%\n          </span>\n        </p>\n      </div>\n    );\n}\n\n","import React from 'react'\nimport CardSmall from './card-small'\nimport './overview.css'\n\nconst cardSmallList = [\n    {\n        icon: 'images/icon-facebook.svg',\n        pageViews: '87',\n        growth: 3,\n        key: 1,\n      },\n      {\n        icon: 'images/icon-twitter.svg',\n        pageViews: '52',\n        growth: 2257,\n        key: 2,\n      },\n      {\n        icon: 'images/icon-instagram.svg',\n        pageViews: '5462',\n        growth: 1375,\n        key: 3,\n      },\n      {\n        icon: 'images/icon-youtube.svg',\n        pageViews: '117',\n        growth: 303,\n        key: 4,\n      },\n    \n]\n\n\nfunction Overview(){\n    return(\n        <section className=\"overview\">\n    <div className=\"wrapper\">\n      <h2>Overview - Today</h2>\n      <div className=\"grid\">\n            {\n                cardSmallList.map(({icon, pageViews, growth, key}) => (\n                <CardSmall\n                    icon={icon}\n                    key={key}\n                    pageViews={pageViews}\n                    growth={growth}\n                \n                \n                />))\n            }\n\n      \n        {/*\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Likes</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-facebook.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">52</p>\n          <p class=\"card-small-percentage is-danger\">\n            <span>\n              <img src=\"images/icon-down.svg\" alt=\"\"/>\n              2%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Likes</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">5462</p>\n          <p class=\"card-small-percentage\">\n            <span>\n              <img src=\"images/icon-up.svg\" alt=\"\"/>\n              2257%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Profile Views</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-instagram.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">52k</p>\n          <p class=\"card-small-percentage\">\n            <span>\n              <img src=\"images/icon-up.svg\" alt=\"\"/>\n              1375%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Retweets</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">117</p>\n          <p class=\"card-small-percentage\">\n            <span>\n              <img src=\"images/icon-up.svg\" alt=\"\"/>\n              303%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Likes</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-twitter.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">507</p>\n          <p class=\"card-small-percentage\">\n            <span>\n              <img src=\"images/icon-up.svg\" alt=\"\"/>\n              553%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Likes</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">107</p>\n          <p class=\"card-small-percentage is-danger\">\n            <span>\n              <img src=\"images/icon-down.svg\" alt=\"\"/>\n              19%\n            </span>\n          </p>\n        </div>\n        <div class=\"card-small\">\n          <p class=\"card-small-views\">Total Views</p>\n          <p class=\"card-small-icon\">\n            <img src=\"images/icon-youtube.svg\" alt=\"\"/>\n          </p>\n          <p class=\"card-small-number\">1407</p>\n          <p class=\"card-small-percentage is-danger\">\n            <span>\n              <img src=\"images/icon-down.svg\" alt=\"\"/>\n              12%\n            </span>\n          </p>\n        </div>\n        */}\n      </div>\n    </div>\n  </section>\n    );\n}\n\nexport default Overview;\n","import React, {useRef} from 'react';\nimport './swich.css'\n\nfunction Switch ({setDarKMode, checked, setChecked}){\n\n   // const [checked, setChecked] = useState(defaultChecked);\n\n    const ref = useRef(null);\n    \n\n    function handleChange(){\n          console.log(ref.current.checked);\n          setChecked(ref.current.checked);\n          setDarKMode(ref.current.checked);\n     \n    }\n\n\n\n    return(\n        <div className=\"dark-mode\">\n              <p className=\"dark-mode-title\">Dark Mode</p>\n              <input ref={ref} onChange={handleChange} checked={checked} type=\"checkbox\" className=\"checkbox\" id=\"checkbox\"/>\n              <label className=\"switch\" htmlFor=\"checkbox\">\n    \n              </label>\n            </div>\n    );\n}\n\nexport default Switch;","//import React, {Fragment} from 'react';\nimport React, {useState, useEffect} from 'react';\nimport './globals.css';\nimport Header from './header'\nimport TopCards from './top-cards';\nimport Overview from './overview';\nimport Switch from './swich';\n\nfunction App() {\n\nconst [darkMode, setDarKMode] = useState(false);\nconst [checked, setChecked] = useState(false);\nconst mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\n\nfunction changeMedia(mq){\n \nsetDarKMode(mq.matches);\nsetChecked(mq.matches);\n\n}\n\nuseEffect(() => {\n\nconst mq = window.matchMedia('(prefers-color-scheme: dark)')\n\nmq.addListener(changeMedia)\n\n\nsetDarKMode(mq.matches);\nsetChecked(mq.matches);\n\n\n\n}, []);\n\n\n  return (<main className={mainClass}>\n\n    <Header>       \n      <Switch setDarKMode={setDarKMode} checked={checked} setChecked={setChecked}/> \n    </Header>\n    <TopCards/>\n    <Overview/>\n\n  </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}